on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: Test

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout 🛎️
      - uses: actions-rs/toolchain@v1
        name: Setup Cargo Toolchain 🛎️
        with:
          components: rustfmt, clippy
          toolchain: stable
          default: true
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        name: Check Code Format 🔧
        with:
          command: fmt
          args: -- --check
      - uses: actions-rs/cargo@v1
        name: Run Clippy Lints 🔨
        with:
          command: clippy
          args: --all-targets

  test:
    name: Test
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        tls: [ rustls, native_tls ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        name: Checkout 🛎️
      - uses: actions-rs/toolchain@v1
        name: Setup Cargo Toolchain 🛎️
        with:
          profile: minimal
          toolchain: stable
          default: true
      - uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.tls }}
      - uses: actions-rs/cargo@v1
        name: Running Tests 🚀
        with:
          command: test
          args: --no-default-features --features ${{ matrix.tls }} --workspace
      - uses: actions-rs/cargo@v1
        name: Dry Run 🚀
        with:
          command: run
          args: --no-default-features --features ${{ matrix.tls }} -- --dry-run

  test_cross:
    name: Test (Cross)
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            features: rustls
          - target: riscv64gc-unknown-linux-gnu
            features: native_tls,openssl_vendored
          - target: armv7-unknown-linux-gnueabihf
            features: native_tls,openssl_vendored
          - target: armv7-unknown-linux-musleabihf
            features: rustls
          - target: aarch64-unknown-linux-gnu
            features: native_tls,openssl_vendored
          - target: aarch64-unknown-linux-musl
            features: rustls
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout 🛎️
      - uses: actions-rs/toolchain@v1
        name: Setup Cargo Toolchain 🛎️
        with:
          profile: minimal
          toolchain: stable
          default: true
      - uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.target }}
      - uses: actions-rs/cargo@v1
        name: Running Tests 🚀
        with:
          use-cross: true
          command: test
          args: --target ${{ matrix.target }} --no-default-features --features ${{ matrix.features }} --workspace
      - uses: actions-rs/cargo@v1
        name: Dry Run 🚀
        with:
          use-cross: true
          command: run
          args: --target ${{ matrix.target }} --no-default-features --features ${{ matrix.features }} -- --dry-run

  test_container:
    name: Test (Container)
    strategy:
      matrix:
        include:
          - image: "archlinux:base-devel"
            command: "echo"
          - image: "fedora:latest"
            command: "dnf install -y gcc"
    runs-on: ubuntu-latest
    container: ${{ matrix.image }}
    steps:
      - uses: actions/checkout@v2
        name: Checkout 🛎️
      - run: ${{ matrix.command }}
        name: Prepare System 🛎️
      - uses: actions-rs/toolchain@v1
        name: Setup Cargo Toolchain 🛎️
        with:
          profile: minimal
          toolchain: stable
          default: true
      - uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.image }}
      - run: cargo install --locked cargo-local-install
        name: Install Some Random Crate 🛎️
      - uses: actions-rs/cargo@v1
        name: Running Tests 🚀
        with:
          command: test
          args: --no-default-features --features rustls --workspace
      - uses: actions-rs/cargo@v1
        name: Dry Run 🚀
        with:
          command: run
          args: --no-default-features --features rustls -- --dry-run

  test_gentoo:
    name: Test (Gentoo)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: docker-compose -f gentoo-test.yml pull

      - run: echo "MONTH=$(date +%m)" >> $GITHUB_ENV
      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
        with:
          key: gentoo-${{ github.workflow }}-${{ env.MONTH }}-{hash}
          restore-keys: |
            gentoo-${{ github.workflow }}-${{ env.MONTH }}-

      - run: docker-compose -f gentoo-test.yml build
      - run: docker-compose -f gentoo-test.yml run test

  test_opensuse:
    name: Test (OpenSUSE)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: docker-compose -f opensuse-test.yml pull

      - run: echo "MONTH=$(date +%m)" >> $GITHUB_ENV
      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
        with:
          key: opensuse-${{ github.workflow }}-${{ env.MONTH }}-{hash}
          restore-keys: |
            opensuse-${{ github.workflow }}-${{ env.MONTH }}-

      - run: docker-compose -f opensuse-test.yml build
      - run: docker-compose -f opensuse-test.yml run test
